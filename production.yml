version: "3.8"

services:

    notification:
        container_name: notifications
        image: zlatkorusev/microservices-architecture-notifications-service
        build:
            context: ./Server
            dockerfile: ./Notifications.Web/Dockerfile
        ports:
            - "5011:80"
        env_file: Server/StoreApi/.production.env
        restart: on-failure
        networks:
            - storeapi-network

    admin:
        container_name: admin
        image: zlatkorusev/microservices-architecture-admin-service
        build:
            context: ./Server
            dockerfile: ./Admin.Web/Dockerfile
        ports:
            - "50400:80"
        env_file: Server/StoreApi/.production.env
        volumes:
            - data-protection:/root/.aspnet/DataProtection-Keys
        restart: on-failure
        networks:
            - storeapi-network

    client:
        container_name: client
        image: zlatkorusev/microservices-architecture-client
        build:
            context: ./Client
            dockerfile: ./Dockerfile.production
        ports:
            - "3000:3000"
        volumes:
            - "./Client:/client/app"
            - "/client/app/node_modules"
        environment:
            - CHOKIDAR_USEPOLLING=true
        restart: on-failure
        networks:
            - storeapi-network
        depends_on:
            - data